<?xml version="1.0" encoding="EUC-KR" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//en"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
    <insert id="insert" parameterType="Product" useGeneratedKeys="true" keyColumn="prod_no" keyProperty="prodNo">
        INSERT INTO product
            (
                prod_no,
                prod_name,
                prod_detail,
                manufacture_day,
                price,
                image_file,
                reg_date,
                stock )
        VALUES
            (
                <if test="prodNo != 0">
                    #{prodNo}
                </if>
                <if test="prodNo == 0">
                    seq_product_prod_no.nextval
                </if>,
                #{prodName: VARCHAR},
                #{prodDetail: VARCHAR},
                #{manuDate: DATE},
                #{price: NUMERIC},
                #{fileName: VARCHAR},
                <if test="regDate != null">
                    #{regDate: DATE}
                </if>
                <if test="regDate == null">
                    SYSDATE
                </if>,
                #{stock: NUMERIC} )
    </insert>

    <resultMap id="product" type="Product">
        <id column="prod_no" property="prodNo" jdbcType="NUMERIC"/>
        <result column="prod_name" property="prodName" jdbcType="VARCHAR"/>
        <result column="prod_detail" property="prodDetail" jdbcType="VARCHAR"/>
        <result column="manufacture_day" property="manuDate" jdbcType="DATE"/>
        <result column="price" property="price" jdbcType="NUMERIC"/>
        <result column="image_file" property="fileName" jdbcType="VARCHAR"/>
        <result column="reg_date" property="regDate" jdbcType="DATE"/>
        <result column="stock" property="stock" jdbcType="NUMERIC"/>
    </resultMap>

    <select id="findById" parameterType="int" resultMap="product">
        SELECT
            p.prod_no         prod_no,
            p.prod_name       prod_name,
            p.prod_detail     prod_detail,
            p.manufacture_day manufacture_day,
            p.price           price,
            p.image_file      image_file,
            p.reg_date        reg_date,
            p.stock           stock
        FROM product p
        WHERE p.prod_no = #{value}
    </select>

    <select id="findProductsByIds" parameterType="java.util.List" resultMap="product">
        SELECT
            prod_no,
            prod_name,
            prod_detail,
            manufacture_day,
            price,
            image_file,
            reg_date,
            stock
        FROM product
        <where>
            <if test="list.size != 0">
                prod_no IN
                <foreach item="id" collection="list" open="(" separator=", " close=")">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>

    <resultMap id="productListData" type="ListData">
        <result column="count" property="count" jdbcType="NUMERIC"/>
        <collection property="list" ofType="Product">
            <id column="prod_no" property="prodNo" jdbcType="NUMERIC"/>
            <result column="prod_name" property="prodName" jdbcType="VARCHAR"/>
            <result column="prod_detail" property="prodDetail" jdbcType="VARCHAR"/>
            <result column="manufacture_day" property="manuDate" jdbcType="DATE"/>
            <result column="price" property="price" jdbcType="NUMERIC"/>
            <result column="image_file" property="fileName" jdbcType="VARCHAR"/>
            <result column="reg_date" property="regDate" jdbcType="DATE"/>
            <result column="stock" property="stock" jdbcType="NUMERIC"/>
        </collection>
    </resultMap>

    <select id="findProducts" parameterType="Search" resultMap="productListData">
        SELECT
            v.prod_no         AS "prod_no",
            v.prod_name       AS "prod_name",
            v.prod_detail     AS "prod_detail",
            v.manufacture_day AS "manufacture_day",
            v.price           AS "price",
            v.image_file      AS "image_file",
            v.reg_date        AS "reg_date",
            v.stock           AS "stock",
            v.count           AS "count"
        FROM
            (
                SELECT
                    ROW_NUMBER() OVER(ORDER BY p.prod_no ASC)  row_num,
                    p.prod_no         prod_no,
                    p.prod_name       prod_name,
                    p.prod_detail     prod_detail,
                    p.manufacture_day manufacture_day,
                    p.price           price,
                    p.image_file      image_file,
                    p.reg_date        reg_date,
                    p.stock           stock,
                    COUNT(*) OVER()   count
                FROM
                    product p
                <where>
                    <choose>
                        <when test="searchCondition == 1">
                            p.prod_name LIKE #{searchKeyword}
                        </when>
                    </choose>
                </where>
                ORDER BY
                    p.reg_date DESC -- Should be flexible
            ) v
        WHERE
            v.row_num BETWEEN #{startRowNum} AND #{endRowNum}
    </select>
    
    <update id="update" parameterType="Product">
        UPDATE product
        <set>
            <if test="prodName != null">
                prod_name = #{prodName},
            </if>
            <if test="prodDetail != null">
                prod_detail = #{prodDetail},
            </if>
            <if test="manuDate != null">
                manufacture_day = #{manuDate},
            </if>
            <if test="price != 0">
                price = #{price},
            </if>
            <if test="fileName != null">
                image_file = #{fileName},
            </if>
            <if test="regDate != null">
                reg_date = #{regDate}
            </if>
        </set>
        <where>
            prod_no = #{prodNo}
        </where>
    </update>

    <delete id="clear">
        DELETE
        FROM product
    </delete>
</mapper>